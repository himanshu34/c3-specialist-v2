plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
}

android {
    namespace 'co.nayan.nayancamv2'
    compileSdk 34

    buildFeatures {
        viewBinding true
        dataBinding true
        buildConfig true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    defaultConfig {
        minSdk 23
        targetSdk 34
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        multiDexEnabled true
        ndk {
            // On x86 devices that run Android API 23 or above, if the application is targeted with API 23 or
            // above, FFmpeg lib might lead to runtime crashes or warnings.
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    android {
        externalNativeBuild {
            ndkBuild {
                // Tells Gradle to find the root ndk-build script in the same
                // directory as the project's build.gradle file. Gradle requires this
                // build script to add your ndk-build project as a build dependency and
                // pull your native sources into your Android project.
                path "src/main/jni/Android.mk"
            }
        }
    }

    packagingOptions {
        jniLibs {
            pickFirsts += ['**/*.so']
        }
    }
    packagingOptions {
        jniLibs {
            pickFirsts += ['**/*.so']
            useLegacyPackaging = true
        }
        doNotStrip "*/*/libdjivideo.so"
        doNotStrip "*/*/libSDKRelativeJNI.so"
        doNotStrip "*/*/libFlyForbid.so"
        doNotStrip "*/*/libduml_vision_bokeh.so"
        doNotStrip "*/*/libyuv2.so"
        doNotStrip "*/*/libGroudStation.so"
        doNotStrip "*/*/libFRCorkscrew.so"
        doNotStrip "*/*/libUpgradeVerify.so"
        doNotStrip "*/*/libFR.so"
        doNotStrip "*/*/libDJIFlySafeCore.so"
        doNotStrip "*/*/libdjifs_jni.so"
        doNotStrip "*/*/libsfjni.so"
        doNotStrip "*/*/libDJICommonJNI.so"
        doNotStrip "*/*/libDJICSDKCommon.so"
        doNotStrip "*/*/libDJIUpgradeCore.so"
        doNotStrip "*/*/libDJIUpgradeJNI.so"
        doNotStrip "*/*/libDJIWaypointV2Core.so"
        doNotStrip "*/*/libAMapSDK_MAP_v6_9_2.so"
        doNotStrip "*/*/libDJIMOP.so"
        doNotStrip "*/*/libDJISDKLOGJNI.so"
        exclude 'META-INF/rxjava.properties'
        exclude 'assets/location_map_gps_locked.png'
        exclude 'assets/location_map_gps_3d.png'

    }

    namespace 'co.nayan.nayancamv2'
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation project(':core')
    implementation project(':imageprocessing')
    implementation project(':appsession')
    implementation project(':openCvLibrary480')
    // DJI dependencies
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation('com.dji:dji-sdk:4.17', {
        /**
         * Uncomment the "library-anti-distortion" if your app does not need Anti Distortion for Mavic 2 Pro and Mavic 2 Zoom.
         * Uncomment the "fly-safe-database" if you need database for release, or we will download it when DJISDKManager.getInstance().registerApp
         * is called.
         * Both will greatly reducing the size of the APK.
         */
        exclude module: 'library-anti-distortion'
        //exclude module: 'fly-safe-database'
    })
    compileOnly 'com.dji:dji-sdk-provided:4.17'
    //DJI End
    api files('src/libs/EJML-core-0.26.jar')
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.12.0-rc01'
    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation 'org.jcodec:jcodec:0.2.5'
    implementation 'io.reactivex.rxjava3:rxjava:3.1.8'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.2'

    // dagger-hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt 'androidx.hilt:hilt-compiler:1.2.0'

    // Work Manager
    implementation "androidx.work:work-runtime-ktx:2.9.0"
    implementation 'androidx.hilt:hilt-work:1.2.0'

    // timber for logging
    implementation "com.jakewharton.timber:timber:$timber_version"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // Lottie Animation
    implementation 'com.airbnb.android:lottie:6.4.0'

    // kotlin extension
    implementation "androidx.fragment:fragment-ktx:$fragment_extention_version"
    implementation "androidx.activity:activity-ktx:$activity_extention_version"

    // navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:32.8.0')
    // When using the BoM, you don't specify versions in Firebase library dependencies
    // Declare the dependencies for the Crashlytics and Analytics libraries
    api 'com.google.firebase:firebase-crashlytics-ktx'
    api 'com.google.firebase:firebase-analytics-ktx'
    api 'com.google.firebase:firebase-crashlytics-ndk'

    // Google Maps
    api 'com.google.android.gms:play-services-maps:18.2.0'
    implementation 'com.google.maps.android:android-maps-utils:3.8.2'
    implementation 'com.google.maps.android:maps-utils-ktx:5.0.0'

    implementation 'androidx.test.ext:junit-ktx:1.1.5'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test:runner:1.5.2'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    kapt 'com.github.bumptech.glide:compiler:4.16.0'
    // Circular ImageView
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    // Room Database
    implementation 'androidx.room:room-runtime:2.6.1'
    implementation 'androidx.room:room-ktx:2.6.1'
    kapt 'androidx.room:room-compiler:2.6.1'

    // JTS Location Tech
    implementation "com.vividsolutions:jts:1.13"
}